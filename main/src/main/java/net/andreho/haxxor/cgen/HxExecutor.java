package net.andreho.haxxor.cgen;

import net.andreho.haxxor.cgen.instr.alloc.ANEWARRAY;
import net.andreho.haxxor.cgen.instr.alloc.MULTIANEWARRAY;
import net.andreho.haxxor.cgen.instr.alloc.NEW;
import net.andreho.haxxor.cgen.instr.alloc.NEWARRAY;
import net.andreho.haxxor.cgen.instr.arithmetic.DADD;
import net.andreho.haxxor.cgen.instr.arithmetic.DDIV;
import net.andreho.haxxor.cgen.instr.arithmetic.DMUL;
import net.andreho.haxxor.cgen.instr.arithmetic.DNEG;
import net.andreho.haxxor.cgen.instr.arithmetic.DREM;
import net.andreho.haxxor.cgen.instr.arithmetic.DSUB;
import net.andreho.haxxor.cgen.instr.arithmetic.FADD;
import net.andreho.haxxor.cgen.instr.arithmetic.FDIV;
import net.andreho.haxxor.cgen.instr.arithmetic.FMUL;
import net.andreho.haxxor.cgen.instr.arithmetic.FNEG;
import net.andreho.haxxor.cgen.instr.arithmetic.FREM;
import net.andreho.haxxor.cgen.instr.arithmetic.FSUB;
import net.andreho.haxxor.cgen.instr.arithmetic.IADD;
import net.andreho.haxxor.cgen.instr.arithmetic.IDIV;
import net.andreho.haxxor.cgen.instr.arithmetic.IMUL;
import net.andreho.haxxor.cgen.instr.arithmetic.INEG;
import net.andreho.haxxor.cgen.instr.arithmetic.IREM;
import net.andreho.haxxor.cgen.instr.arithmetic.ISUB;
import net.andreho.haxxor.cgen.instr.arithmetic.LADD;
import net.andreho.haxxor.cgen.instr.arithmetic.LDIV;
import net.andreho.haxxor.cgen.instr.arithmetic.LMUL;
import net.andreho.haxxor.cgen.instr.arithmetic.LNEG;
import net.andreho.haxxor.cgen.instr.arithmetic.LREM;
import net.andreho.haxxor.cgen.instr.arithmetic.LSUB;
import net.andreho.haxxor.cgen.instr.array.ARRAYLENGTH;
import net.andreho.haxxor.cgen.instr.array.load.AALOAD;
import net.andreho.haxxor.cgen.instr.array.load.BALOAD;
import net.andreho.haxxor.cgen.instr.array.load.CALOAD;
import net.andreho.haxxor.cgen.instr.array.load.DALOAD;
import net.andreho.haxxor.cgen.instr.array.load.FALOAD;
import net.andreho.haxxor.cgen.instr.array.load.IALOAD;
import net.andreho.haxxor.cgen.instr.array.load.LALOAD;
import net.andreho.haxxor.cgen.instr.array.load.SALOAD;
import net.andreho.haxxor.cgen.instr.array.store.AASTORE;
import net.andreho.haxxor.cgen.instr.array.store.BASTORE;
import net.andreho.haxxor.cgen.instr.array.store.CASTORE;
import net.andreho.haxxor.cgen.instr.array.store.DASTORE;
import net.andreho.haxxor.cgen.instr.array.store.FASTORE;
import net.andreho.haxxor.cgen.instr.array.store.IASTORE;
import net.andreho.haxxor.cgen.instr.array.store.LASTORE;
import net.andreho.haxxor.cgen.instr.array.store.SASTORE;
import net.andreho.haxxor.cgen.instr.bitwise.IAND;
import net.andreho.haxxor.cgen.instr.bitwise.IOR;
import net.andreho.haxxor.cgen.instr.bitwise.ISHL;
import net.andreho.haxxor.cgen.instr.bitwise.ISHR;
import net.andreho.haxxor.cgen.instr.bitwise.IUSHR;
import net.andreho.haxxor.cgen.instr.bitwise.IXOR;
import net.andreho.haxxor.cgen.instr.bitwise.LAND;
import net.andreho.haxxor.cgen.instr.bitwise.LOR;
import net.andreho.haxxor.cgen.instr.bitwise.LSHL;
import net.andreho.haxxor.cgen.instr.bitwise.LSHR;
import net.andreho.haxxor.cgen.instr.bitwise.LUSHR;
import net.andreho.haxxor.cgen.instr.bitwise.LXOR;
import net.andreho.haxxor.cgen.instr.cflow.ATHROW;
import net.andreho.haxxor.cgen.instr.cflow.exits.ARETURN;
import net.andreho.haxxor.cgen.instr.cflow.exits.DRETURN;
import net.andreho.haxxor.cgen.instr.cflow.exits.FRETURN;
import net.andreho.haxxor.cgen.instr.cflow.exits.IRETURN;
import net.andreho.haxxor.cgen.instr.cflow.exits.LRETURN;
import net.andreho.haxxor.cgen.instr.cflow.exits.RETURN;
import net.andreho.haxxor.cgen.instr.compare.DCMPG;
import net.andreho.haxxor.cgen.instr.compare.DCMPL;
import net.andreho.haxxor.cgen.instr.compare.FCMPG;
import net.andreho.haxxor.cgen.instr.compare.FCMPL;
import net.andreho.haxxor.cgen.instr.compare.LCMP;
import net.andreho.haxxor.cgen.instr.constants.ACONST_NULL;
import net.andreho.haxxor.cgen.instr.constants.BIPUSH;
import net.andreho.haxxor.cgen.instr.constants.DCONST_0;
import net.andreho.haxxor.cgen.instr.constants.DCONST_1;
import net.andreho.haxxor.cgen.instr.constants.FCONST_0;
import net.andreho.haxxor.cgen.instr.constants.FCONST_1;
import net.andreho.haxxor.cgen.instr.constants.FCONST_2;
import net.andreho.haxxor.cgen.instr.constants.ICONST_0;
import net.andreho.haxxor.cgen.instr.constants.ICONST_1;
import net.andreho.haxxor.cgen.instr.constants.ICONST_2;
import net.andreho.haxxor.cgen.instr.constants.ICONST_3;
import net.andreho.haxxor.cgen.instr.constants.ICONST_4;
import net.andreho.haxxor.cgen.instr.constants.ICONST_5;
import net.andreho.haxxor.cgen.instr.constants.ICONST_M1;
import net.andreho.haxxor.cgen.instr.constants.LCONST_0;
import net.andreho.haxxor.cgen.instr.constants.LCONST_1;
import net.andreho.haxxor.cgen.instr.constants.LDC;
import net.andreho.haxxor.cgen.instr.constants.SIPUSH;
import net.andreho.haxxor.cgen.instr.conversion.CHECKCAST;
import net.andreho.haxxor.cgen.instr.conversion.INSTANCEOF;
import net.andreho.haxxor.cgen.instr.conversion.primitive.D2F;
import net.andreho.haxxor.cgen.instr.conversion.primitive.D2I;
import net.andreho.haxxor.cgen.instr.conversion.primitive.D2L;
import net.andreho.haxxor.cgen.instr.conversion.primitive.F2D;
import net.andreho.haxxor.cgen.instr.conversion.primitive.F2I;
import net.andreho.haxxor.cgen.instr.conversion.primitive.F2L;
import net.andreho.haxxor.cgen.instr.conversion.primitive.I2B;
import net.andreho.haxxor.cgen.instr.conversion.primitive.I2C;
import net.andreho.haxxor.cgen.instr.conversion.primitive.I2D;
import net.andreho.haxxor.cgen.instr.conversion.primitive.I2F;
import net.andreho.haxxor.cgen.instr.conversion.primitive.I2L;
import net.andreho.haxxor.cgen.instr.conversion.primitive.I2S;
import net.andreho.haxxor.cgen.instr.conversion.primitive.L2D;
import net.andreho.haxxor.cgen.instr.conversion.primitive.L2F;
import net.andreho.haxxor.cgen.instr.conversion.primitive.L2I;
import net.andreho.haxxor.cgen.instr.fields.GETFIELD;
import net.andreho.haxxor.cgen.instr.fields.GETSTATIC;
import net.andreho.haxxor.cgen.instr.fields.PUTFIELD;
import net.andreho.haxxor.cgen.instr.fields.PUTSTATIC;
import net.andreho.haxxor.cgen.instr.invokes.INVOKEDYNAMIC;
import net.andreho.haxxor.cgen.instr.invokes.INVOKEINTERFACE;
import net.andreho.haxxor.cgen.instr.invokes.INVOKESPECIAL;
import net.andreho.haxxor.cgen.instr.invokes.INVOKESTATIC;
import net.andreho.haxxor.cgen.instr.invokes.INVOKEVIRTUAL;
import net.andreho.haxxor.cgen.instr.jumps.GOTO;
import net.andreho.haxxor.cgen.instr.jumps.cond.integer.IF_ICMPEQ;
import net.andreho.haxxor.cgen.instr.jumps.cond.integer.IF_ICMPGE;
import net.andreho.haxxor.cgen.instr.jumps.cond.integer.IF_ICMPGT;
import net.andreho.haxxor.cgen.instr.jumps.cond.integer.IF_ICMPLE;
import net.andreho.haxxor.cgen.instr.jumps.cond.integer.IF_ICMPLT;
import net.andreho.haxxor.cgen.instr.jumps.cond.integer.IF_ICMPNE;
import net.andreho.haxxor.cgen.instr.jumps.cond.refs.IFNONNULL;
import net.andreho.haxxor.cgen.instr.jumps.cond.refs.IFNULL;
import net.andreho.haxxor.cgen.instr.jumps.cond.refs.IF_ACMPEQ;
import net.andreho.haxxor.cgen.instr.jumps.cond.refs.IF_ACMPNE;
import net.andreho.haxxor.cgen.instr.jumps.cond.zero.IFEQ;
import net.andreho.haxxor.cgen.instr.jumps.cond.zero.IFGE;
import net.andreho.haxxor.cgen.instr.jumps.cond.zero.IFGT;
import net.andreho.haxxor.cgen.instr.jumps.cond.zero.IFLE;
import net.andreho.haxxor.cgen.instr.jumps.cond.zero.IFLT;
import net.andreho.haxxor.cgen.instr.jumps.cond.zero.IFNE;
import net.andreho.haxxor.cgen.instr.local.IINC;
import net.andreho.haxxor.cgen.instr.local.load.ALOAD;
import net.andreho.haxxor.cgen.instr.local.load.DLOAD;
import net.andreho.haxxor.cgen.instr.local.load.FLOAD;
import net.andreho.haxxor.cgen.instr.local.load.ILOAD;
import net.andreho.haxxor.cgen.instr.local.load.LLOAD;
import net.andreho.haxxor.cgen.instr.local.store.ASTORE;
import net.andreho.haxxor.cgen.instr.local.store.DSTORE;
import net.andreho.haxxor.cgen.instr.local.store.FSTORE;
import net.andreho.haxxor.cgen.instr.local.store.ISTORE;
import net.andreho.haxxor.cgen.instr.local.store.LSTORE;
import net.andreho.haxxor.cgen.instr.misc.NOP;
import net.andreho.haxxor.cgen.instr.stack.DUP;
import net.andreho.haxxor.cgen.instr.stack.DUP2;
import net.andreho.haxxor.cgen.instr.stack.DUP2_X1;
import net.andreho.haxxor.cgen.instr.stack.DUP2_X2;
import net.andreho.haxxor.cgen.instr.stack.DUP_X1;
import net.andreho.haxxor.cgen.instr.stack.DUP_X2;
import net.andreho.haxxor.cgen.instr.stack.POP;
import net.andreho.haxxor.cgen.instr.stack.POP2;
import net.andreho.haxxor.cgen.instr.stack.SWAP;
import net.andreho.haxxor.cgen.instr.subroutine.JSR;
import net.andreho.haxxor.cgen.instr.subroutine.RET;
import net.andreho.haxxor.cgen.instr.switches.LOOKUPSWITCH;
import net.andreho.haxxor.cgen.instr.switches.TABLESWITCH;
import net.andreho.haxxor.cgen.instr.sync.MONITORENTER;
import net.andreho.haxxor.cgen.instr.sync.MONITOREXIT;

/**
 * <br/>Created by a.hofmann on 25.10.2017 at 03:41.
 */
public interface HxExecutor {
  void visit(HxComputationContext ctx, NOP inst, HxFrame frame);
  void visit(HxComputationContext ctx, ACONST_NULL inst, HxFrame frame);
  void visit(HxComputationContext ctx, ICONST_M1 inst, HxFrame frame);
  void visit(HxComputationContext ctx, ICONST_0 inst, HxFrame frame);
  void visit(HxComputationContext ctx, ICONST_1 inst, HxFrame frame);
  void visit(HxComputationContext ctx, ICONST_2 inst, HxFrame frame);
  void visit(HxComputationContext ctx, ICONST_3 inst, HxFrame frame);
  void visit(HxComputationContext ctx, ICONST_4 inst, HxFrame frame);
  void visit(HxComputationContext ctx, ICONST_5 inst, HxFrame frame);
  void visit(HxComputationContext ctx, LCONST_0 inst, HxFrame frame);
  void visit(HxComputationContext ctx, LCONST_1 inst, HxFrame frame);
  void visit(HxComputationContext ctx, FCONST_0 inst, HxFrame frame);
  void visit(HxComputationContext ctx, FCONST_1 inst, HxFrame frame);
  void visit(HxComputationContext ctx, FCONST_2 inst, HxFrame frame);
  void visit(HxComputationContext ctx, DCONST_0 inst, HxFrame frame);
  void visit(HxComputationContext ctx, DCONST_1 inst, HxFrame frame);
  void visit(HxComputationContext ctx, BIPUSH inst, HxFrame frame);
  void visit(HxComputationContext ctx, SIPUSH inst, HxFrame frame);
  void visit(HxComputationContext ctx, LDC<?> inst, HxFrame frame);
  void visit(HxComputationContext ctx, ILOAD inst, HxFrame frame);
  void visit(HxComputationContext ctx, LLOAD inst, HxFrame frame);
  void visit(HxComputationContext ctx, FLOAD inst, HxFrame frame);
  void visit(HxComputationContext ctx, DLOAD inst, HxFrame frame);
  void visit(HxComputationContext ctx, ALOAD inst, HxFrame frame);
  void visit(HxComputationContext ctx, IALOAD inst, HxFrame frame);
  void visit(HxComputationContext ctx, LALOAD inst, HxFrame frame);
  void visit(HxComputationContext ctx, FALOAD inst, HxFrame frame);
  void visit(HxComputationContext ctx, DALOAD inst, HxFrame frame);
  void visit(HxComputationContext ctx, AALOAD inst, HxFrame frame);
  void visit(HxComputationContext ctx, BALOAD inst, HxFrame frame);
  void visit(HxComputationContext ctx, CALOAD inst, HxFrame frame);
  void visit(HxComputationContext ctx, SALOAD inst, HxFrame frame);
  void visit(HxComputationContext ctx, ISTORE inst, HxFrame frame);
  void visit(HxComputationContext ctx, LSTORE inst, HxFrame frame);
  void visit(HxComputationContext ctx, FSTORE inst, HxFrame frame);
  void visit(HxComputationContext ctx, DSTORE inst, HxFrame frame);
  void visit(HxComputationContext ctx, ASTORE inst, HxFrame frame);
  void visit(HxComputationContext ctx, IASTORE inst, HxFrame frame);
  void visit(HxComputationContext ctx, LASTORE inst, HxFrame frame);
  void visit(HxComputationContext ctx, FASTORE inst, HxFrame frame);
  void visit(HxComputationContext ctx, DASTORE inst, HxFrame frame);
  void visit(HxComputationContext ctx, AASTORE inst, HxFrame frame);
  void visit(HxComputationContext ctx, BASTORE inst, HxFrame frame);
  void visit(HxComputationContext ctx, CASTORE inst, HxFrame frame);
  void visit(HxComputationContext ctx, SASTORE inst, HxFrame frame);
  void visit(HxComputationContext ctx, POP inst, HxFrame frame);
  void visit(HxComputationContext ctx, POP2 inst, HxFrame frame);
  void visit(HxComputationContext ctx, DUP inst, HxFrame frame);
  void visit(HxComputationContext ctx, DUP_X1 inst, HxFrame frame);
  void visit(HxComputationContext ctx, DUP_X2 inst, HxFrame frame);
  void visit(HxComputationContext ctx, DUP2 inst, HxFrame frame);
  void visit(HxComputationContext ctx, DUP2_X1 inst, HxFrame frame);
  void visit(HxComputationContext ctx, DUP2_X2 inst, HxFrame frame);
  void visit(HxComputationContext ctx, SWAP inst, HxFrame frame);
  void visit(HxComputationContext ctx, IADD inst, HxFrame frame);
  void visit(HxComputationContext ctx, LADD inst, HxFrame frame);
  void visit(HxComputationContext ctx, FADD inst, HxFrame frame);
  void visit(HxComputationContext ctx, DADD inst, HxFrame frame);
  void visit(HxComputationContext ctx, ISUB inst, HxFrame frame);
  void visit(HxComputationContext ctx, LSUB inst, HxFrame frame);
  void visit(HxComputationContext ctx, FSUB inst, HxFrame frame);
  void visit(HxComputationContext ctx, DSUB inst, HxFrame frame);
  void visit(HxComputationContext ctx, IMUL inst, HxFrame frame);
  void visit(HxComputationContext ctx, LMUL inst, HxFrame frame);
  void visit(HxComputationContext ctx, FMUL inst, HxFrame frame);
  void visit(HxComputationContext ctx, DMUL inst, HxFrame frame);
  void visit(HxComputationContext ctx, IDIV inst, HxFrame frame);
  void visit(HxComputationContext ctx, LDIV inst, HxFrame frame);
  void visit(HxComputationContext ctx, FDIV inst, HxFrame frame);
  void visit(HxComputationContext ctx, DDIV inst, HxFrame frame);
  void visit(HxComputationContext ctx, IREM inst, HxFrame frame);
  void visit(HxComputationContext ctx, LREM inst, HxFrame frame);
  void visit(HxComputationContext ctx, FREM inst, HxFrame frame);
  void visit(HxComputationContext ctx, DREM inst, HxFrame frame);
  void visit(HxComputationContext ctx, INEG inst, HxFrame frame);
  void visit(HxComputationContext ctx, LNEG inst, HxFrame frame);
  void visit(HxComputationContext ctx, FNEG inst, HxFrame frame);
  void visit(HxComputationContext ctx, DNEG inst, HxFrame frame);
  void visit(HxComputationContext ctx, ISHL inst, HxFrame frame);
  void visit(HxComputationContext ctx, LSHL inst, HxFrame frame);
  void visit(HxComputationContext ctx, ISHR inst, HxFrame frame);
  void visit(HxComputationContext ctx, LSHR inst, HxFrame frame);
  void visit(HxComputationContext ctx, IUSHR inst, HxFrame frame);
  void visit(HxComputationContext ctx, LUSHR inst, HxFrame frame);
  void visit(HxComputationContext ctx, IAND inst, HxFrame frame);
  void visit(HxComputationContext ctx, LAND inst, HxFrame frame);
  void visit(HxComputationContext ctx, IOR inst, HxFrame frame);
  void visit(HxComputationContext ctx, LOR inst, HxFrame frame);
  void visit(HxComputationContext ctx, IXOR inst, HxFrame frame);
  void visit(HxComputationContext ctx, LXOR inst, HxFrame frame);
  void visit(HxComputationContext ctx, IINC inst, HxFrame frame);
  void visit(HxComputationContext ctx, I2L inst, HxFrame frame);
  void visit(HxComputationContext ctx, I2F inst, HxFrame frame);
  void visit(HxComputationContext ctx, I2D inst, HxFrame frame);
  void visit(HxComputationContext ctx, L2I inst, HxFrame frame);
  void visit(HxComputationContext ctx, L2F inst, HxFrame frame);
  void visit(HxComputationContext ctx, L2D inst, HxFrame frame);
  void visit(HxComputationContext ctx, F2I inst, HxFrame frame);
  void visit(HxComputationContext ctx, F2L inst, HxFrame frame);
  void visit(HxComputationContext ctx, F2D inst, HxFrame frame);
  void visit(HxComputationContext ctx, D2I inst, HxFrame frame);
  void visit(HxComputationContext ctx, D2L inst, HxFrame frame);
  void visit(HxComputationContext ctx, D2F inst, HxFrame frame);
  void visit(HxComputationContext ctx, I2B inst, HxFrame frame);
  void visit(HxComputationContext ctx, I2C inst, HxFrame frame);
  void visit(HxComputationContext ctx, I2S inst, HxFrame frame);
  void visit(HxComputationContext ctx, LCMP inst, HxFrame frame);
  void visit(HxComputationContext ctx, FCMPL inst, HxFrame frame);
  void visit(HxComputationContext ctx, FCMPG inst, HxFrame frame);
  void visit(HxComputationContext ctx, DCMPL inst, HxFrame frame);
  void visit(HxComputationContext ctx, DCMPG inst, HxFrame frame);
  HxFrame visit(HxComputationContext ctx, IFEQ inst, HxFrame frame);
  HxFrame visit(HxComputationContext ctx, IFNE inst, HxFrame frame);
  HxFrame visit(HxComputationContext ctx, IFLT inst, HxFrame frame);
  HxFrame visit(HxComputationContext ctx, IFGE inst, HxFrame frame);
  HxFrame visit(HxComputationContext ctx, IFGT inst, HxFrame frame);
  HxFrame visit(HxComputationContext ctx, IFLE inst, HxFrame frame);
  HxFrame visit(HxComputationContext ctx, IF_ICMPEQ inst, HxFrame frame);
  HxFrame visit(HxComputationContext ctx, IF_ICMPNE inst, HxFrame frame);
  HxFrame visit(HxComputationContext ctx, IF_ICMPLT inst, HxFrame frame);
  HxFrame visit(HxComputationContext ctx, IF_ICMPGE inst, HxFrame frame);
  HxFrame visit(HxComputationContext ctx, IF_ICMPGT inst, HxFrame frame);
  HxFrame visit(HxComputationContext ctx, IF_ICMPLE inst, HxFrame frame);
  HxFrame visit(HxComputationContext ctx, IF_ACMPEQ inst, HxFrame frame);
  HxFrame visit(HxComputationContext ctx, IF_ACMPNE inst, HxFrame frame);
  HxFrame visit(HxComputationContext ctx, GOTO inst, HxFrame frame);
  HxFrame visit(HxComputationContext ctx, JSR inst, HxFrame frame);
  HxFrame visit(HxComputationContext ctx, RET inst, HxFrame frame);
  Iterable<HxFrame> visit(HxComputationContext ctx, TABLESWITCH inst, HxFrame frame);
  Iterable<HxFrame> visit(HxComputationContext ctx, LOOKUPSWITCH inst, HxFrame frame);
  void visit(HxComputationContext ctx, IRETURN inst, HxFrame frame);
  void visit(HxComputationContext ctx, LRETURN inst, HxFrame frame);
  void visit(HxComputationContext ctx, FRETURN inst, HxFrame frame);
  void visit(HxComputationContext ctx, DRETURN inst, HxFrame frame);
  void visit(HxComputationContext ctx, ARETURN inst, HxFrame frame);
  void visit(HxComputationContext ctx, RETURN inst, HxFrame frame);
  void visit(HxComputationContext ctx, GETSTATIC inst, HxFrame frame);
  void visit(HxComputationContext ctx, PUTSTATIC inst, HxFrame frame);
  void visit(HxComputationContext ctx, GETFIELD inst, HxFrame frame);
  void visit(HxComputationContext ctx, PUTFIELD inst, HxFrame frame);
  void visit(HxComputationContext ctx, INVOKEVIRTUAL inst, HxFrame frame);
  void visit(HxComputationContext ctx, INVOKESPECIAL inst, HxFrame frame);
  void visit(HxComputationContext ctx, INVOKESTATIC inst, HxFrame frame);
  void visit(HxComputationContext ctx, INVOKEINTERFACE inst, HxFrame frame);
  void visit(HxComputationContext ctx, INVOKEDYNAMIC inst, HxFrame frame);
  void visit(HxComputationContext ctx, NEW inst, HxFrame frame);
  void visit(HxComputationContext ctx, NEWARRAY inst, HxFrame frame);
  void visit(HxComputationContext ctx, ANEWARRAY inst, HxFrame frame);
  void visit(HxComputationContext ctx, ARRAYLENGTH inst, HxFrame frame);
  void visit(HxComputationContext ctx, ATHROW inst, HxFrame frame);
  void visit(HxComputationContext ctx, CHECKCAST inst, HxFrame frame);
  void visit(HxComputationContext ctx, INSTANCEOF inst, HxFrame frame);
  void visit(HxComputationContext ctx, MONITORENTER inst, HxFrame frame);
  void visit(HxComputationContext ctx, MONITOREXIT inst, HxFrame frame);
  void visit(HxComputationContext ctx, MULTIANEWARRAY inst, HxFrame frame);
  HxFrame visit(HxComputationContext ctx, IFNULL inst, HxFrame frame);
  HxFrame visit(HxComputationContext ctx, IFNONNULL inst, HxFrame frame);
}
